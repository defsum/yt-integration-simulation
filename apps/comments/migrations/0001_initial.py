# Generated by Django 4.2.23 on 2025-08-04 19:17

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("videos", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("content", models.TextField(max_length=10000)),
                ("author_name", models.CharField(db_index=True, max_length=100)),
                ("author_avatar_url", models.URLField(blank=True)),
                ("author_email", models.EmailField(blank=True, max_length=254)),
                ("like_count", models.PositiveIntegerField(default=0)),
                ("reply_count", models.PositiveIntegerField(default=0)),
                ("is_approved", models.BooleanField(default=True)),
                ("is_ai_generated", models.BooleanField(default=False)),
                (
                    "sentiment_score",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Sentiment score from -1.0 (negative) to 1.0 (positive)",
                        max_digits=3,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(-1.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "sentiment_label",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("positive", "Positive"),
                            ("neutral", "Neutral"),
                            ("negative", "Negative"),
                        ],
                        max_length=10,
                    ),
                ),
                ("is_flagged", models.BooleanField(default=False)),
                ("is_spam", models.BooleanField(default=False)),
                ("moderation_notes", models.TextField(blank=True)),
                ("ai_model_used", models.CharField(blank=True, max_length=100)),
                ("generation_prompt", models.TextField(blank=True)),
                (
                    "parent_comment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="comments.comment",
                    ),
                ),
                (
                    "video",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="videos.video",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["video", "is_approved"],
                        name="comments_co_video_i_7f3ca4_idx",
                    ),
                    models.Index(
                        fields=["video", "parent_comment"],
                        name="comments_co_video_i_d86745_idx",
                    ),
                    models.Index(
                        fields=["-like_count"], name="comments_co_like_co_572784_idx"
                    ),
                    models.Index(
                        fields=["author_name"], name="comments_co_author__c8630d_idx"
                    ),
                    models.Index(
                        fields=["is_ai_generated"],
                        name="comments_co_is_ai_g_aca252_idx",
                    ),
                    models.Index(
                        fields=["sentiment_label"],
                        name="comments_co_sentime_7da56d_idx",
                    ),
                ],
            },
        ),
    ]
